@inherits Components.Cards.CardBase
@using Components.Buttons
@using System.Net.Http.Json
@using System.Text.Json.Serialization

@inject HttpClient http

<CardBase>
    <img src="img-placeholder.svg" class="ProjectCard__ProjectImage" alt="img">
    <div class="ProjectCard__ProjectContent flex-col">
        <div class="ProjectCard__ProjectContent__Texts flex-col">
            <h2 class="ProjectCard__ProjectContent__Texts--Heading">
                @if (HeaderContent is null) {
                    // Fallback
                    // Fallback title
                }
                else {
                    @HeaderContent
                }
            </h2>
            <p class="ProjectCard__ProjectContent__Texts--Description">
                @if (DescriptionContent is not null) {
                    @DescriptionContent
                }
                @* No fallback content *@
            </p>
        </div>
        <div class="ProjectCard__ProjectContent__Buttons">
            <ButtonPrimary>
                Live site preview
            </ButtonPrimary>
            <ButtonPrimary>
                Go to project
            </ButtonPrimary>
            <ButtonPrimary OnClickCallback="GetReadme">
                README - preview
            </ButtonPrimary>
        </div>
    </div>
</CardBase>

@code {

    class Model {
        [JsonPropertyName("fact")]
        public string? Fact { get; set; }
    }
    
    // [Parameter] public string  
    [Parameter] public string ImageSource { get; set; } = null!;
    [Parameter] public RenderFragment? HeaderContent { get; set; }
    [Parameter] public RenderFragment? DescriptionContent { get; set; }

    private async Task<string?> GetReadme(string? uri) {
        if (uri is null) return null;
        
        var response = await http.GetAsync(uri);
        response.EnsureSuccessStatusCode();

        var responseBody = await response.Content.ReadFromJsonAsync<Model>();
            
        Console.WriteLine(responseBody?.Fact);
        return responseBody?.Fact;
    }
}